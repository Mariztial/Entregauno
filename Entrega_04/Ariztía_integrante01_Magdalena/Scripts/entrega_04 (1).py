# -*- coding: utf-8 -*-
"""Entrega 04

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DCYxtdXq70z5ReanSbvEs7RDiS3o1kH7
"""

import pandas as pd
data = pd.read_csv('BASE DATOS 1.csv')
data.head()

"""Definimos las variables que van a ser necesarias para construir las visualizaciones."""

country_column = 'Country'
type_of_law_column = 'Type of Law'
application_column = 'Application'

"""Tuve que dejar todos los datos de las variables en mayúscula, ya que habían datos en minúscula y otras en mayúscula, y se repetían en las vizualizaciones."""

data[country_column]= data[country_column].str.capitalize()
data[type_of_law_column]= data[type_of_law_column].str.capitalize()
data[application_column]= data[application_column].str.capitalize()

"""Acontinuación, intentamos ordenar los datos correspondientes a la variable de aplicación. Dejamos que los datos que se repiten más de una vez aparezcan, y aquellos que se repiten solo una vez, los agrupamos en la categoría de "Otros"."""

combination_app = data.groupby(['Application']).size().reset_index(name='Cantidad')
combination_app
grafico = combination_app[combination_app["Cantidad"]>1]
otros = combination_app[combination_app["Cantidad"]==1]["Cantidad"].sum()

nueva_fila = {"Application": "otros", "Cantidad": otros}
grafico = grafico.append(nueva_fila, ignore_index=True)
grafico

combination_coun = data.groupby(['Country']).size().reset_index(name='cantidad')
combination_coun

"""Ponemos sólo los países que se repitan más de tres veces."""

min_count = 3
combination_coun_filtered = combination_coun[combination_coun['cantidad'] >= min_count]
print(combination_coun_filtered)

"""Creamos la variable de "repetidos", correspondiente a los países que se repiten."""

repetidos = data[data["Country"].isin(combination_coun_filtered["Country"])]
repetidos

"""Creamos las siguientes variables para poder hacer la visualización, combinando los tipos de leyes con los países."""

paises_con_ban = repetidos[repetidos["Type of Law"]=="Ban"].groupby("Country").count()["Type of Law"].reset_index()
paises_con_fee = repetidos[repetidos["Type of Law"]=="Fee"].groupby("Country").count()["Type of Law"].reset_index()
paises_con_banfee = repetidos[repetidos["Type of Law"]=="Ban+Fee"].groupby("Country").count()["Type of Law"].reset_index()

paises_con_ban["Tipo de ley"] = "Ban"
paises_con_fee["Tipo de ley"] = "Fee"
paises_con_banfee["Tipo de ley"] = "Ban+Fee"

"""Ponemos los datos que vamos a usar para el gráfico."""

datos = paises_con_ban.append(paises_con_fee, ignore_index=True).append(paises_con_banfee, ignore_index=True)
datos

"""Ponemos los códigos para crear el gráfico."""

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import pandas as pd

# data
x= datos["Country"].tolist()
y= datos["Type of Law"].tolist()
z= datos["Tipo de ley"].tolist()

# create pandas dataframe
data_list = pd.DataFrame(
    {'x_axis': x,
     'y_axis': y,
     'category': z
    })

# change size of data points
minsize = min(data_list['y_axis'])
maxsize = max(data_list['y_axis'])

# scatter plot
sns.catplot(x="x_axis", y="y_axis", kind="swarm", hue="category",sizes=(minsize*100, maxsize*100), data=data_list)
plt.grid()

"""Definimos los ejes."""

x= datos["Country"].tolist()
y= datos["Type of Law"].tolist()
z= datos["Tipo de ley"].tolist()
len(z)
sns.scatterplot(data=datos, x="Type of Law", y="Country", hue="Tipo de ley")

sns.scatterplot(data=datos, x="Type of Law", y="Country", hue="Tipo de ley")
plt.title('Tipos de leyes según país')
plt.xlabel('Type of Law')
plt.ylabel('Country')
plt.legend(title='Tipo de ley')
plt.savefig('scatter_plot.png')
plt.show()

"""Hacemos un resumen de los tipos de leyes que existen, y cuáles son más usadas."""

combination_tl = data.groupby(['Type of Law']).size().reset_index(name='Cantidad')
combination_tl

combination_tl = data.groupby(['Type of Law', 'Application']).size().reset_index(name='Cantidad')
min_count = 3
combination_tl_filtered = combination_tl[combination_tl['Cantidad'] >= min_count]
combination_tl_filtered

from matplotlib import pyplot as plt
import seaborn as sns
combination_tl_filtered.groupby('Type of Law').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

combination_tl_filtered.groupby('Type of Law').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right']].set_visible(False)
plt.title('Tipos de regulación existentes')
plt.xlabel('Cantidad')
plt.ylabel('Type of Law')
plt.savefig('horizontal_bar_plot.png')
plt.show()

"""Y de esta manera, logramos obtener dos visualizaciones que nos hablan sobre las legislaciones existentes en cuanto al uso de bolsas plásticas en diferentes países."""